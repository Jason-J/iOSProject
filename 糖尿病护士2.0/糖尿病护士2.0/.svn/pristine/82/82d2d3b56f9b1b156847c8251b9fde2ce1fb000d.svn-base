//
//  ScrollPageView.m
//  ShowProduct
//
//  Created by lin on 14-5-23.
//  Copyright (c) 2014年 @"". All rights reserved.
//

#import "ScrollPageView.h"
#import "HomeViewCell.h"
#import "AFNetworking.h"
#import "UIImageView+WebCache.h"
#import "SubjectsDetailsViewController.h"
#import "SubjectsViewController.h"

@interface ScrollPageView  ()

@property (nonatomic, retain) NSString *imageUrl;
@property (nonatomic, retain)CustomTableView *vCustomTableView;
@end
@implementation ScrollPageView

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
        mNeedUseDelegate = YES;
        [self commInit];
        _tableArray = [[NSMutableArray alloc] init];
        
    }
    return self;
}

-(void)initData{
    [self freshContentTableAtIndex:0];
}


-(void)commInit{
    if (_contentItems == nil) {
        _contentItems = [[NSMutableArray alloc] init];
    }
    if (_scrollView == nil) {
        _scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, self.frame.size.width, self.frame.size.height)];
        NSLog(@"ScrollViewFrame:(%f,%f)",self.frame.size.width,self.frame.size.height);
        _scrollView.pagingEnabled = YES;
        _scrollView.delegate = self;
    }
    [self addSubview:_scrollView];
}

-(void)dealloc{
    [_contentItems removeAllObjects],[_contentItems release],_contentItems= nil;
    [_scrollView release];
//    [_tableArray release];
//    _tableArray=nil;
    [super dealloc];
}

#pragma mark - 其他辅助功能
#pragma mark 添加ScrollowViewd的ContentView
-(void)setContentOfTables:(NSInteger)aNumerOfTables{
    for (int i = 0; i < aNumerOfTables; i++) {
        _vCustomTableView = [[CustomTableView alloc] initWithFrame:CGRectMake(320 * i, 0, 320, self.frame.size.height)];
        _vCustomTableView.delegate = self;
        _vCustomTableView.dataSource = self;
        //为table添加嵌套HeadderView
        [self addLoopScrollowView:_vCustomTableView];
        [_scrollView addSubview:_vCustomTableView];
        [_contentItems addObject:_vCustomTableView];
        
        [_vCustomTableView release];
    }
    [_scrollView setContentSize:CGSizeMake(320 * aNumerOfTables, self.frame.size.height)];
}

#pragma mark 移动ScrollView到某个页面
-(void)moveScrollowViewAthIndex:(NSInteger)aIndex{
    mNeedUseDelegate = NO;
    CGRect vMoveRect = CGRectMake(self.frame.size.width * aIndex, 0, self.frame.size.width, self.frame.size.width);
    [_scrollView scrollRectToVisible:vMoveRect animated:YES];
    mCurrentPage= aIndex;
    if ([_delegate respondsToSelector:@selector(didScrollPageViewChangedPage:)]) {
        [_delegate didScrollPageViewChangedPage:mCurrentPage];
    }
}

#pragma mark 刷新某个页面
-(void)freshContentTableAtIndex:(NSInteger)aIndex{
    
    if (_contentItems.count < aIndex) {
    
        return;
    }
    CustomTableView *vTableContentView =(CustomTableView *)[_contentItems objectAtIndex:aIndex];
    [vTableContentView forceToFreshData];
}

#pragma mark 添加HeaderView
-(void)addLoopScrollowView:(CustomTableView *)aTableView {
    //添加一张默认图片
    SGFocusImageItem *item = [[[SGFocusImageItem alloc] initWithDict:@{@"image": [NSString stringWithFormat:@"%@", _imageUrl]} tag:-1] autorelease];
    SGFocusImageFrame *bannerView = [[SGFocusImageFrame alloc] initWithFrame:CGRectMake(0, -105, 320, 105) delegate:aTableView imageItems:@[item] isAuto:YES];
//    self.headerImage = [[UIImageView alloc]initWithFrame:CGRectMake(0, -105, 320, 105)];;
//    
    aTableView.homeTableView.tableHeaderView = bannerView;
//
//    [bannerView release];
    
 
}

#pragma mark 改变TableView上面滚动栏的内容
-(void)changeHeaderContentWithCustomTable:(CustomTableView *)aTableContent{
    int length = 1;
    NSMutableArray *tempArray = [NSMutableArray array];
    for (int i = 0 ; i < length; i++)
    {
        NSDictionary *dict = [NSDictionary dictionaryWithObjectsAndKeys:
                              [NSString stringWithFormat:@"title%d",i],@"title" ,
                              [NSString stringWithFormat:@"girl%d",(i + 1)],@"image",
                              nil];
        [tempArray addObject:dict];
    }
    
    NSMutableArray *itemArray = [NSMutableArray arrayWithCapacity:length+2];
    //添加最后一张图 用于循环
    if (length > 1)
    {
        NSDictionary *dict = [tempArray objectAtIndex:length-1];
        SGFocusImageItem *item = [[[SGFocusImageItem alloc] initWithDict:dict tag:-1] autorelease];
        [itemArray addObject:item];
    }
    for (int i = 0; i < length; i++)
    {
        NSDictionary *dict = [tempArray objectAtIndex:i];
        SGFocusImageItem *item = [[[SGFocusImageItem alloc] initWithDict:dict tag:i] autorelease];
        [itemArray addObject:item];
        
    }
    //添加第一张图 用于循环
    if (length >1)
    {
        NSDictionary *dict = [tempArray objectAtIndex:0];
        SGFocusImageItem *item = [[[SGFocusImageItem alloc] initWithDict:dict tag:length] autorelease];
        [itemArray addObject:item];
    }
    
    SGFocusImageFrame *vFocusFrame = (SGFocusImageFrame *)aTableContent.homeTableView.tableHeaderView;
    [vFocusFrame changeImageViewsContent:itemArray];
}

#pragma mark - UIScrollViewDelegate
- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView{
    mNeedUseDelegate = YES;
}

- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    
    int page = (_scrollView.contentOffset.x+320/2.0) / 320;
    if (mCurrentPage == page) {
        return;
    }
    mCurrentPage= page;
    if ([_delegate respondsToSelector:@selector(didScrollPageViewChangedPage:)] && mNeedUseDelegate) {
        [_delegate didScrollPageViewChangedPage:mCurrentPage];
    }
}

- (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate
{
    
    if (!decelerate)
    {
//        CGFloat targetX = _scrollView.contentOffset.x + _scrollView.frame.size.width;
//        targetX = (int)(targetX/ITEM_WIDTH) * ITEM_WIDTH;
//        [self moveToTargetPosition:targetX];
    }
  

}
#pragma mark - 请求数据
-(void)subjectsRequest{

    NSString * page = [NSString stringWithFormat:@"&p=%ld",(long)self.p];
    
    NSString * newurl = [self.baseURL stringByAppendingString:page];
    NSURL * url = [NSURL URLWithString:newurl];
    
    NSURLRequest * request = [NSURLRequest requestWithURL:url];
    AFHTTPRequestOperation * operation = [[AFHTTPRequestOperation alloc] initWithRequest:request];
    [operation setCompletionBlockWithSuccess:^(AFHTTPRequestOperation *operation, id responseObject) {
        NSString *requestTmp = [NSString stringWithString:operation.responseString];
        NSData *resData = [[NSData alloc] initWithData:[requestTmp dataUsingEncoding:NSUTF8StringEncoding]];
        id object = [NSJSONSerialization JSONObjectWithData:resData options:NSJSONReadingMutableLeaves error:nil];
        [resData release];
  
        
        NSArray * array = [[[object objectForKey:@"Variables"] objectForKey:@"value"] objectForKey:@"data"];
        NSString * imageURL = [[[[[object objectForKey:@"Variables"] objectForKey:@"value"] objectForKey:@"imagesarray"] lastObject] objectForKey:@"images"];
        _imageUrl  = [[[[[object objectForKey:@"Variables"] objectForKey:@"value"] objectForKey:@"imagesarray"] lastObject] objectForKey:@"images"];
        NSLog(@"%@", [[[[[object objectForKey:@"Variables"] objectForKey:@"value"] objectForKey:@"imagesarray"] lastObject] objectForKey:@"images"]);
        if (_imageUrl) {
            [self  addLoopScrollowView:_vCustomTableView];
        }
//        [self.headerImage sd_setImageWithURL:[NSURL URLWithString:imageURL]];
        [self.headerImage sd_setImageWithURL:[NSURL URLWithString:imageURL] placeholderImage:[UIImage imageNamed:@"girl4.png"]];
        if (array.count!=0) {
            [_tableArray removeAllObjects];
        }
        for (NSDictionary * dic in array) {
            
            Subjects * subject = [[Subjects alloc] init];
            subject.summary = [dic objectForKey:@"summary"];
            subject.aid = [dic objectForKey:@"aid"];
            subject.dateline = [dic objectForKey:@"dateline"];
            subject.commentnum = [dic objectForKey:@"commentnum"];
            subject.favtimes = [dic objectForKey:@"favtimes"];
            subject.sharetimes = [dic objectForKey:@"sharetimes"];
            subject.title = [dic objectForKey:@"title"];
            subject.images = [dic objectForKey:@"images"];
            subject.subjectsURL = [dic objectForKey:@"url"];
            
            [_tableArray addObject:subject];
            [subject release];

    }

    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        NSLog(@"error = %@",error);
    }];
    [operation start];
    [operation release];
}

#pragma mark - CustomTableViewDataSource
-(NSInteger)numberOfRowsInTableView:(UITableView *)aTableView InSection:(NSInteger)section FromView:(CustomTableView *)aView{

    if (_tableArray.count == 0) {
        return 0;
    }else{
        return _tableArray.count;
    }
   
}

-(UITableViewCell *)cellForRowInTableView:(UITableView *)aTableView IndexPath:(NSIndexPath *)aIndexPath FromView:(CustomTableView *)aView{
    static NSString *vCellIdentify = @"homeCell";
    HomeViewCell *vCell = [aTableView dequeueReusableCellWithIdentifier:vCellIdentify];
    if (vCell == nil) {
        vCell = [[[NSBundle mainBundle] loadNibNamed:@"HomeViewCell" owner:self options:nil] lastObject];
    }
    
    [vCell configureForSubjects:[_tableArray objectAtIndex:aIndexPath.row]];

//    [aView reloadTableViewDataSource];
//
//    NSInteger vNewIndex = aIndexPath.row % 4 + 1;
//    vCell.headerImageView.image = [UIImage imageNamed:[NSString stringWithFormat:@"new%d",vNewIndex]];
    return vCell;
}

#pragma mark CustomTableViewDelegate
-(float)heightForRowAthIndexPath:(UITableView *)aTableView IndexPath:(NSIndexPath *)aIndexPath FromView:(CustomTableView *)aView{
    HomeViewCell *vCell = [[[NSBundle mainBundle] loadNibNamed:@"HomeViewCell" owner:self options:nil] lastObject];
    return vCell.frame.size.height;
}

-(void)didSelectedRowAthIndexPath:(UITableView *)aTableView IndexPath:(NSIndexPath *)aIndexPath FromView:(CustomTableView *)aView{
    SubjectsDetailsViewController * subjectsDetailsVC = [[SubjectsDetailsViewController alloc] init];
    Subjects * subject = [_tableArray objectAtIndex:aIndexPath.row];
    subjectsDetailsVC.aaid = subject.aid;
    
    UIViewController *viewController = [self viewController];
    subjectsDetailsVC.hidesBottomBarWhenPushed = YES;
    [viewController.navigationController pushViewController:subjectsDetailsVC animated:YES];
//    [[NSNotificationCenter defaultCenter]
//     postNotificationName:@"chuandi" object:subject.subjectsURL];
}
- (UIViewController *)viewController {
    for (UIView* next = [self superview]; next; next = next.superview) {
        UIResponder *nextResponder = [next nextResponder];
        if ([nextResponder isKindOfClass:[UIViewController class]]) {
            return (UIViewController *)nextResponder;
        }
    }
    return nil;
}
-(void)loadData:(void(^)(int aAddedRowCount))complete FromView:(CustomTableView *)aView{
    //    double delayInSeconds = 1.0;
    //    dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayInSeconds * NSEC_PER_SEC));
    //    dispatch_after(popTime, dispatch_get_main_queue(), ^(void){
//    [_tableArray removeAllObjects];
   self.p++;
//    [self subjectsRequest];
//    if (complete) {
//        complete(4);
//    }

}

-(void)refreshData:(void(^)())complete FromView:(CustomTableView *)aView{
 
    double delayInSeconds = 1.0;
    dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, (int64_t)(delayInSeconds * NSEC_PER_SEC));
    dispatch_after(popTime, dispatch_get_main_queue(), ^(void){
//        [_tableArray removeAllObjects];
                    self.p=1;
                    [self subjectsRequest];
        //改变header显示图片
        [self changeHeaderContentWithCustomTable:aView];
        if (complete) {
            complete();

        }
    
    });
}

//- (BOOL)tableViewEgoRefreshTableHeaderDataSourceIsLoading:(EGORefreshTableHeaderView*)view FromView:(CustomTableView *)aView{
//    
//   return  aView.reloading;
//}


@end
