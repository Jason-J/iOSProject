//
//  MineViewController.m
//  TangNiaoBingHuShi
//
//  Created by Jason on 14-11-19.
//  Copyright (c) 2014年 Jason. All rights reserved.
//

#import "MineViewController.h"
#import "User.h"
#import "AFNetworking.h"
#import "LoginViewController.h"
#import "AFURLSessionManager.h"
#import "UIImageView+WebCache.h"
#import "UIImageView+AFNetworking.h"
#import "CollectViewController.h"
#import "MyMessageViewController.h"
#import "PersonalCenter.h"
#import "LoginState.h"



@interface MineViewController ()<UIAlertViewDelegate,UITableViewDataSource,UITableViewDelegate>
@property (weak, nonatomic) IBOutlet UIView *headerView;
@property (weak, nonatomic) IBOutlet UIButton *exitBtn;
@property (weak, nonatomic) IBOutlet UIImageView *headimg;
@property (weak, nonatomic) IBOutlet UILabel *UserNameLab;
@property (weak, nonatomic) IBOutlet UILabel *levelLab;
@property (weak, nonatomic) IBOutlet UIButton *coinBtn;
@property (nonatomic,strong)User * user;
@property (strong, nonatomic)  UITableView *tableView;

@end

@implementation MineViewController
-(void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:YES];
    //    self.navigationController.navigationBar.translucent = NO;
  
}
-(void)viewDidAppear:(BOOL)animated{
    [super viewDidAppear:YES];
    self.tableView = [[UITableView alloc] initWithFrame:CGRectMake(0,self.headerView.frame.size.height+64, SCREEN_WIDTH, SCREEN_HEIGHT+64) style:UITableViewStyleGrouped];
    [self.view addSubview:self.tableView];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    _tableView.rowHeight = 40;
    [_tableView setSeparatorInset:UIEdgeInsetsMake(0, 0, 0, 0)];
    [_tableView setSeparatorColor:[UIColor colorWithRed:225.0/255 green:225.0/255 blue:225.0/255 alpha:1]];
    _tableView.backgroundColor = [UIColor colorWithRed:240.0/255 green:249.0/255 blue:249.0/255 alpha:1];
//    _headerView.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"banner_bg"]];
    //    _tableView.scrollEnabled = NO;
    NSString *docPath = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject];
    NSString *userPath = [docPath stringByAppendingString:@"/user.aa"];
    NSLog(@"path ====%@", userPath);
    
    _user = [NSKeyedUnarchiver unarchiveObjectWithFile:userPath];
    NSLog(@"username===%@",_user.member_username);

    if (_user.member_username ==nil) {
        UIAlertView * ale = [[UIAlertView alloc] initWithTitle:@"亲" message:@"请登录" delegate:self cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
        [ale show];
    } else{
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
            [self getUserMessage];
            dispatch_async(dispatch_get_main_queue(), ^{
            });
        });
    }
    self.tableView.contentInset = UIEdgeInsetsMake(-35, 0, 400, 0);
}
-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex{
    if (buttonIndex==0) {
        UIStoryboard *loginSB = [UIStoryboard storyboardWithName:@"Mine" bundle:nil];
        LoginViewController *loginVC =[loginSB instantiateViewControllerWithIdentifier:@"login"];
        [loginVC valueOfBlock:^{
            self.tabBarController.selectedIndex = 0;
        }];
        loginVC.hidesBottomBarWhenPushed = YES;
        [self presentViewController:loginVC animated:YES completion:nil];
    }
}
- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
}
#pragma mark - 查看规则
- (IBAction)ruleAction:(id)sender {
//    UIStoryboard * ruleSB = [UIStoryboard storyboardWithName:@"Mine" bundle:nil];
//    UIViewController * ruleVC = [ruleSB instantiateViewControllerWithIdentifier:@"rule"];
//    ruleVC.hidesBottomBarWhenPushed = YES;
//    [self.navigationController pushViewController:ruleVC animated:YES];
}
#pragma make - 获得用户信息
- (void)getUserMessage{
 NSString * string =  [CommonSettings baseUrlWithVersion:2 module:@"userinfo" parameters:@{@"op":@"getinfo"}];
//    NSURL *url = [NSURL URLWithString:[NSString stringWithFormat:@"http://test.tanghushi.com/api/mobile/?version=2&module=userinfo&op=getinfo"]];
    //    NSMutableString * string = [NSMutableString stringWithFormat:
    NSURLRequest * request = [[NSURLRequest alloc]initWithURL:[NSURL URLWithString:string] cachePolicy:NSURLRequestReloadIgnoringCacheData timeoutInterval:20];
    AFHTTPRequestOperation * operation = [[AFHTTPRequestOperation alloc] initWithRequest:request];
    [operation setCompletionBlockWithSuccess:^(AFHTTPRequestOperation *operation, id responseObject) {
        NSString *requestTmp = [NSString stringWithString:operation.responseString];
        NSData *resData = [[NSData alloc] initWithData:[requestTmp dataUsingEncoding:NSUTF8StringEncoding]];
        
        id object = [NSJSONSerialization JSONObjectWithData:resData options:NSJSONReadingMutableLeaves error:nil];
        User *user = [User shareInstance];
        [user setValuesForKeysWithDictionary:[[object objectForKey:@"Variables"] objectForKey:@"value"]];
        [[SDImageCache sharedImageCache]clearMemory];
        [[SDImageCache sharedImageCache]clearDisk];
//        [_UserNameLab setText:user.member_username];
     
        [_headimg sd_setImageWithURL:[NSURL URLWithString:user.headimg]];

        [_coinBtn setTitle:user.userAccount forState:UIControlStateNormal];
        [_levelLab setText:user.credits];
        _headimg.layer.cornerRadius = 39;
        _headimg.layer.masksToBounds = YES;
        //  [_headimg setImageWithURL:[NSURL URLWithString:user.headimg]];
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        if (error) {
            NSLog(@"error ==%@",error);
        }
    }];
    [operation start];
    
}
- (IBAction)exitAction:(id)sender {    
}
-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    return 0.1;
}
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    NSInteger rowNum;
    switch (section) {
        case 0:
            rowNum = 5;
            break;
            case 1:
            rowNum = 3;
            break;
            case 2:
            rowNum = 1;
            break;
        default:
            break;
    }
    return rowNum;
}
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 3;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section==0) {
        return 0;
    }else{
        return 10;
    }
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 40;
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    static NSString * cell = @"mineCell";
    UITableViewCell * mineCell = [tableView dequeueReusableCellWithIdentifier:cell];
    if (!mineCell) {
        mineCell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cell];
    }
     mineCell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;//箭头属性
    if (indexPath.section==0) {
        
        switch (indexPath.row) {
            case 0:
                mineCell.textLabel.text = @"详细资料";
                mineCell.imageView.image = [UIImage imageNamed:@"Personal _Details"];
                break;
            case 1:
                mineCell.textLabel.text = @"账户充值";
                  mineCell.imageView.image = [UIImage imageNamed:@"Personal Center _ account recharge"];
                break;
            case 2:
                mineCell.textLabel.text = @"个人中心";
                 mineCell.imageView.image = [UIImage imageNamed:@"Personal Center _ Personal Information"];
                break;
            case 3:
                mineCell.textLabel.text = @"收藏";
                mineCell.imageView.image = [UIImage imageNamed:@"Center _ Personal Collection"];
                break;
            case 4:
                mineCell.textLabel.text = @"设置";
                 mineCell.imageView.image = [UIImage imageNamed:@"Personal Center _ Set"];
                break;
            default:
                break;
        }
    }else if (indexPath.section==1){
        switch (indexPath.row) {
            case 0:
                mineCell.textLabel.text = @"我的联系人";
                mineCell.imageView.image = [UIImage imageNamed:@"Personal center _ my contacts"];
                break;
                case 1:
                mineCell.textLabel.text = @"关于我们";
                 mineCell.imageView.image = [UIImage imageNamed:@"Personal Center _ About Us"];
                break;
                case 2:
                mineCell.textLabel.text = @"检查更新";
                mineCell.imageView.image = [UIImage imageNamed:@"Personal Center _ Check for updates"];
                break;
            default:
                break;
        }
    }else{
        mineCell.textLabel.text = @"注销登录";
         mineCell.imageView.image = [UIImage imageNamed:@"Personal Center _ log out"];
    }

    return mineCell;
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    switch (indexPath.section) {
        case 0:{
            if (indexPath.row==0) {
                UIStoryboard * myMessageSB = [UIStoryboard storyboardWithName:@"Mine" bundle:nil];
                MyMessageViewController * myMessageVC = [myMessageSB instantiateViewControllerWithIdentifier:@"MyMessage"];
                [myMessageVC loginSuccess:^(BOOL LoginSuccess) {
                    NSLog(@"修改成功返回 %d %s",LoginSuccess,__func__);
                }];
                myMessageVC.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:myMessageVC animated:YES];
            }else if (indexPath.row==1){
                UIStoryboard * myAccountSB = [UIStoryboard storyboardWithName:@"Mine" bundle:nil];
                UIViewController * myAccountVC = [myAccountSB instantiateViewControllerWithIdentifier:@"MyAccount"];
                myAccountVC.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:myAccountVC animated:YES];
            }else if (indexPath.row==2){
                
                
                PersonalCenter * personalCenterVC = [[PersonalCenter alloc] init];
                personalCenterVC.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:personalCenterVC animated:YES];

            }else if (indexPath.row==3){
                CollectViewController * collectVC = [[CollectViewController alloc] init];
                collectVC.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:collectVC animated:YES];
            }else if (indexPath.row==4){
                UIStoryboard * settingSB = [UIStoryboard storyboardWithName:@"Mine" bundle:nil];
                UIViewController * settingVC = [settingSB instantiateViewControllerWithIdentifier:@"setting"];
                settingVC.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:settingVC animated:YES];
            }
        }
            break;
        case 1:{
            if (indexPath.row==0) {
                UIStoryboard * MyContactsSB = [UIStoryboard storyboardWithName:@"Mine" bundle:nil];
                UIViewController * MyContactsVC = [MyContactsSB instantiateViewControllerWithIdentifier:@"MyContacts"];
                MyContactsVC.hidesBottomBarWhenPushed = YES;
                [self.navigationController pushViewController:MyContactsVC animated:YES];

            }else if (indexPath.row==1){
                
            }else if (indexPath.row==2){
                DXAlertView * ale = [[DXAlertView alloc] initWithTitle:@"提示" contentText:@"是否要检测最新版本?" leftButtonTitle:@"取消" rightButtonTitle:@"确定"];
                [ale show];
                ale.rightBlock= ^(){
                    [self getEditionMessage];
                };
            }
            
        }
            break;
        case 2:
        {
            DXAlertView * exitAlertView = [[DXAlertView alloc] initWithTitle:@"温馨提示" contentText:@"您确定要注销登录？" leftButtonTitle:@"确定" rightButtonTitle:@"取消"];
            [exitAlertView show];
            exitAlertView.leftBlock = ^(){
                NSLog(@"SSS");
                User *user = [User shareInstance];
                user.member_username = nil;
                user.member_uid = nil;
//                user.headimg = nil;
                user = nil;
                NSString *docPath = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject];
                NSString *userPath = [docPath stringByAppendingPathComponent:@"/user.aa"];
                [NSKeyedArchiver archiveRootObject:user  toFile:userPath];
                self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:nil style:UIBarButtonItemStylePlain target:self action:nil];
                [_headimg setImage:nil];
                [_UserNameLab setText:nil];
                //清除cookie
                NSHTTPCookieStorage* cookies = [NSHTTPCookieStorage sharedHTTPCookieStorage];
                NSArray* facebookCookies = [cookies cookiesForURL:
                                            [NSURL URLWithString:@"http://test.tanghushi.com"]];
                for (NSHTTPCookie* cookie in facebookCookies) {
                    [cookies deleteCookie:cookie];  
                }
                [self viewDidAppear:YES];
            };
        }
            break;
        default:
            break;
    }
}

- (void)getEditionMessage{
    JSNetWorking * js = [[JSNetWorking alloc] init];
    [js getRequestWithURLStr:@"http://test.tanghushi.com/api/mobile/?version=2&module=versions&op=getversions&type=3" success:^(id ResultData) {
        id value = [[ResultData objectForKey:@"Variables"] objectForKey:@"value"];
        NSLog(@"value===%@",value);
    } failure:^(NSError *error, AFHTTPRequestOperation *operation) {
        NSLog(@"error=%@",error);
        [FVCustomAlertView showDefaultErrorAlertOnView:self.view withTitle:@"获取版本信息失败"];
    }];
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        dispatch_async(dispatch_get_main_queue(), ^{
        });
    });
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
