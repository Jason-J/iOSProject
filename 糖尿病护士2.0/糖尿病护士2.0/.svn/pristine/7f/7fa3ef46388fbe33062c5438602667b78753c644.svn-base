//
//  JSNetWorking.m
//  TangNiaoBingHuShi
//
//  Created by Jason on 14-12-5.
//  Copyright (c) 2014å¹´ Jason. All rights reserved.
//

#import "JSNetWorking.h"

@implementation JSNetWorking
- (instancetype)init
{
    self = [super init];
    if (self) {
        
    }
    return self;
}
-(void)getRequestWithURLStr:(NSString *)URLSTR success:(NETBLOCK)successBlock failure:(FAILUREBLOCK)failureBlock
{

    NSURL *url = [NSURL URLWithString:[URLSTR  stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]];
    NSURLRequest *request = [NSURLRequest requestWithURL:url cachePolicy:NSURLRequestReloadIgnoringLocalCacheData timeoutInterval:20];
    AFHTTPRequestOperation *operation = [[AFHTTPRequestOperation alloc] initWithRequest:request];
    [operation setCompletionBlockWithSuccess:^(AFHTTPRequestOperation *operation, id responseObject) {
        id object = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingMutableLeaves error:nil];
        
        successBlock(object);
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        failureBlock(error, operation);
    }];
    [operation start];
}
-(void)postRequestWithURLStr:(NSString *)URLStr paramters:(id)paramters success:(NETBLOCK)successBlock failure:(FAILUREBLOCK)failureBlock
{
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObject:@"text/html"];
    [manager POST:URLStr parameters:paramters success:^(AFHTTPRequestOperation *operation, id responseObject) {
        successBlock(responseObject);
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        failureBlock(error, operation);
    }];
}
-(void)postImagesRequestWithURLStr:(NSString *)URLStr imagesArray:(NSArray *)images imageKey:(NSString *)key paramters:(id)paramters success:(NETBLOCK)successBlock failure:(FAILUREBLOCK)failureBlock
{
    NSMutableArray *array = [[NSMutableArray alloc] init];
    for (int i = 0; i < images.count; i++) {
        NSData *data = UIImageJPEGRepresentation(images[i], 0.00001);
        [array addObject:data];
    }
    
    AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];
    manager.responseSerializer.acceptableContentTypes = [NSSet setWithObject:@"text/html"];
    [manager POST:URLStr parameters:paramters constructingBodyWithBlock:^(id<AFMultipartFormData> formData) {
        for (int i = 0; i < images.count; i++) {
            [formData appendPartWithFileData:array[i]  name:key fileName:[NSString stringWithFormat:@"%d.jpeg",i] mimeType:@"image/jpeg"];
        }
    } success:^(AFHTTPRequestOperation *operation, id responseObject) {
        successBlock(responseObject);
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        failureBlock(error, operation);
    }];

}
@end
