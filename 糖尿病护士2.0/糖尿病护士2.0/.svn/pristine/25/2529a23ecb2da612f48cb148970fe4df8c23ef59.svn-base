//
//  LittleWindowView.m
//  TangNiaoBingHuShi
//
//  Created by Jason on 14-12-2.
//  Copyright (c) 2014年 Jason. All rights reserved.
//

#import "LittleWindowView.h"
#import "Medicine.h"
#import "CellForLittleWindow.h"
#import "KGModal.h"
@interface LittleWindowView ()<UISearchBarDelegate,UITableViewDataSource, UITableViewDelegate>

@property (weak, nonatomic) IBOutlet UITableView *tableView;
@property (weak, nonatomic) IBOutlet UIButton *editBtn;

@property (nonatomic, strong) NSArray *buttonArr;
@property (weak, nonatomic) IBOutlet UIButton *saveBtn;
@property (nonatomic, strong) NSMutableArray *deleteArr;
@end
@implementation LittleWindowView

- (void)awakeFromNib {
    // Initialization code
    _deleteArr = [[NSMutableArray alloc]  init];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    [_tableView registerNib:[UINib nibWithNibName:@"CellForLittleWindow" bundle:nil] forCellReuseIdentifier:@"medicine"];
}
- (IBAction)editBtnAction:(id)sender {
    if (_tableView.editing) {
        _tableView.editing = NO;
        
    } else{
        _tableView.editing = YES;
        
    }

}
-(void)setIsEdit:(BOOL)isEdit
{
    _saveBtn.hidden = YES;
    _editBtn.hidden = YES;
}
#pragma  mark- 是否显示保存按钮
-(void)setIsSaveBtn:(UIButton *)isSaveBtn
{
    if ([isSaveBtn.titleLabel.text isEqualToString:@"编辑"]) {
        _saveBtn.hidden = NO;
        _editBtn.hidden = NO;
    } else{
        _editBtn.hidden = YES;
        _saveBtn.hidden = YES;
    }
}
-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *str = @"medicine";
    CellForLittleWindow *cell = [tableView dequeueReusableCellWithIdentifier:str];
    Medicine *medicine = [[Medicine alloc] init];
    medicine = [_medicineMArr objectAtIndex:indexPath.row];
    cell.doseLabel.text =medicine.dose;
    cell.medicineNameLabel.text = medicine.medicine_name;
    return cell;
}
-(void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        Medicine *medicine = [_medicineMArr objectAtIndex:indexPath.row];
        [_deleteArr addObject:medicine];
        [_medicineMArr removeObjectAtIndex:indexPath.row];
        [tableView deleteRowsAtIndexPaths:@[indexPath] withRowAnimation:UITableViewRowAnimationRight];
        
    }
}

- (IBAction)saveBtnAction:(id)sender {
    self.arrayBlock(_medicineMArr, _deleteArr);
    [[KGModal sharedInstance] hide];
}

-(void)valueOfArrayBlock:(ARRAYBLOCK)arrayBlock
{
    self.arrayBlock = arrayBlock;
}
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [_medicineMArr count];
}
-(BOOL)searchBarShouldBeginEditing:(UISearchBar *)searchBar
{
//    UIViewController *controller = [[UIViewController alloc] initWithNibName:@"SearchViewController" bundle:nil];
//    [[self viewController] presentViewController:controller animated:NO completion:nil];

    self.block(searchBar);
    return YES;
}
-(void)valueOfBlock:(RETURNBLOCK)block
{
    self.block = block;
}
- (UIViewController *)viewController {
    for (UIView* next = [self superview]; next; next = next.superview) {
        UIResponder *nextResponder = [next nextResponder];
        if ([nextResponder isKindOfClass:[UIViewController class]]) {
            return (UIViewController *)nextResponder;
        }
    }
    return nil;
}
- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];

    // Configure the view for the selected state
}

@end
