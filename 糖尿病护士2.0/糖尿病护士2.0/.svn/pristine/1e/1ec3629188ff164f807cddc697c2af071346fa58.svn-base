//
//  CommonSettings.m
//  TangNiaoBingHuShi
//
//  Created by Jason on 14-12-23.
//  Copyright (c) 2014å¹´ Jason. All rights reserved.
//

#import "CommonSettings.h"

static NSString *kTestModeKey = @"_test_mode_key";

@implementation CommonSettings

+ (instancetype)sharedSettings {
    static CommonSettings *instance = nil;
    static dispatch_once_t onceToken;
    
    dispatch_once(&onceToken, ^{
        instance = [[CommonSettings alloc] init];
    });
    
    return instance;
}

#pragma properties & methods

- (NSString *)getSessionCookieName{
    return @"sessionCookies";
}

#pragma mark - static methods

+ (void)setTestMode:(SettingsBaseURLType)testMode{
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    [defaults setInteger:testMode forKey:kTestModeKey];
    [defaults synchronize];
}

+ (NSInteger)getTestMode{
    return [[NSUserDefaults standardUserDefaults] integerForKey:kTestModeKey];
}

+ (NSString *)BaseURL:(SettingsBaseURLType)settingsTestType{
    NSString *baseUrl = @"";
    switch (settingsTestType) {
        case SettingsBaseURLTypeDEBUG:
            baseUrl = @"http://test.tanghushi.com";
            break;
        case SettingsBaseURLTypeInnerTest:
            baseUrl = @"";
            break;
        case SettingsBaseURLTypePreRelease:
            baseUrl = @"";
            break;
        case SettingsBaseURLTypeRelease:
            baseUrl = @"http://www.tanghushi.com";
            break;
        default:
            //default is debug mode
            baseUrl = @"http://test.tanghushi.com";
            break;
    }
    
    return baseUrl;
}

+ (NSString *)baseUrl:(SettingsBaseURLType)settingTestType version:(NSInteger)version module:(NSString *)module parameters:(NSDictionary *)parameters {
    NSString *urlString = [NSString stringWithFormat:@"%@/api/mobile/?version=%ld&module=%@", [self BaseURL:settingTestType], (long)version, module];
    
    if (!parameters) {
        return urlString;
    }
    
    __block NSMutableString *tempString = [[NSMutableString alloc] initWithString:urlString];
    [parameters enumerateKeysAndObjectsUsingBlock:^(id key, id object, BOOL *stop){
        [tempString appendFormat:@"&%@=%@", key, object];
    }];
    
    urlString = [tempString copy];
    
    NSLog(@"generated url %@", urlString);
    return urlString;
}

+ (NSString *)baseUrlWithVersion:(NSInteger)version module:(NSString *)module parameters:(NSDictionary *)parameters{
    SettingsBaseURLType testType = [[NSUserDefaults standardUserDefaults] integerForKey:kTestModeKey];
    NSString *urlString = [CommonSettings baseUrl:testType version:version module:module parameters:parameters];
    return urlString;
}

@end
