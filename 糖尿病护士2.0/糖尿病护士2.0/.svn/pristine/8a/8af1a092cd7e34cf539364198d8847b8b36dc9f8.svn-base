//
//  MyPlanView.m
//  TangNiaoBingHuShi
//
//  Created by Jason on 14-12-2.
//  Copyright (c) 2014年 Jason. All rights reserved.
//

#import "MyPlanView.h"
#import "KGModal.h"
#import "LittleWindowView.h"
#import "AddMedicineViewController.h"
#import "User.h"
#import "LoginViewController.h"
@interface MyPlanView  ()<UISearchDisplayDelegate, UIAlertViewDelegate>
@property (nonatomic, strong) NSArray *buttonArr;
@property (nonatomic, strong) NSArray *buttonArrNum;
@property (nonatomic, copy) NSString *dateStr;
@property (weak, nonatomic) IBOutlet UILabel *myPlanNameLabel;
@property (nonatomic, strong) LittleWindowView *littleWindowView;
@property (weak, nonatomic) IBOutlet UIButton *saveBtn;

@property (nonatomic, strong) NSMutableArray *useMedicineMArr;
@property (weak, nonatomic) IBOutlet UIButton *breakfastBtn_1;
@property (weak, nonatomic) IBOutlet UIButton *breakfastBtn_2;
@property (weak, nonatomic) IBOutlet UIButton *breakfastBtn_3;
@property (weak, nonatomic) IBOutlet UIButton *lunchBtn_1;
@property (weak, nonatomic) IBOutlet UIButton *lunchBtn_2;
@property (weak, nonatomic) IBOutlet UIButton *lunchBtn_3;
@property (weak, nonatomic) IBOutlet UIButton *dinnerBtn_1;
@property (weak, nonatomic) IBOutlet UIButton *dinnerBtn_2;
@property (weak, nonatomic) IBOutlet UIButton *dinnerBtn_3;
@property (weak, nonatomic) IBOutlet UIButton *nightBtn;


@property (weak, nonatomic) IBOutlet UIButton *addBreakfastBtn_1;
@property (weak, nonatomic) IBOutlet UIButton *addBreakfastBtn_2;
@property (weak, nonatomic) IBOutlet UIButton *addBreakfastBtn_3;
@property (weak, nonatomic) IBOutlet UIButton *addLunchBtn_1;
@property (weak, nonatomic) IBOutlet UIButton *addLunchBtn_2;
@property (weak, nonatomic) IBOutlet UIButton *addLunchBtn_3;
@property (weak, nonatomic) IBOutlet UIButton *addDinnerBtn_1;
@property (weak, nonatomic) IBOutlet UIButton *addDinnerBtn_2;
@property (weak, nonatomic) IBOutlet UIButton *addDinnerBtn_3;
@property (weak, nonatomic) IBOutlet UIButton *addNightBtn;

@end
@implementation MyPlanView

- (void)awakeFromNib {
    // Initialization code

    _isEdit = YES;
    _breakfastBtn_1.tag = 10000;
    _breakfastBtn_2.tag = 10001;
    _breakfastBtn_3.tag = 10002;
    _lunchBtn_1.tag = 10003;
    _lunchBtn_2.tag = 10004;
    _lunchBtn_3.tag = 10005;
    _dinnerBtn_1.tag = 10006;
    _dinnerBtn_2.tag = 10007;
    _dinnerBtn_3.tag = 10008;
    _nightBtn.tag = 10009;
    
    _addBreakfastBtn_1.tag = 20000;
    _addBreakfastBtn_2.tag = 20001;
    _addBreakfastBtn_3.tag = 20002;
    _addLunchBtn_1.tag = 20003;
    _addLunchBtn_2.tag = 20004;
    _addLunchBtn_3.tag = 20005;
    _addDinnerBtn_1.tag = 20006;
    _addDinnerBtn_2.tag = 20007;
    _addDinnerBtn_3.tag = 20008;
    _addNightBtn.tag = 20009;
    
         _buttonArr = @[@"早餐前30分钟", @"早餐时", @"早餐后30分钟", @"午餐前30分钟", @"午餐时", @"午餐后30分钟", @"晚餐前30分钟", @"晚餐时" , @"晚餐后30分钟", @"睡前30分钟" ];
    _buttonArrNum = @[@"1", @"2", @"3", @"4", @"5", @"6", @"7", @"8" , @"9", @"10" ];
    _useMedicineMArr = [[NSMutableArray alloc] init];
    NSDate *date = [NSDate date];
    NSDateFormatter *fom = [[NSDateFormatter alloc] init];
    [fom setDateFormat:@"YYYY-MM-dd"];
    _dateStr = [fom stringFromDate:date];
    _currentTimeLabel.text =  _dateStr;
    
    
}
#pragma  mark- 数据刷新
-(void)setDic:(NSDictionary *)dic
{
    _dic = [NSDictionary dictionaryWithDictionary:dic];
    _myPlanNameLabel.text = [[_dic objectForKey:@"detail"] objectForKey:@"name"];
    _currentTimeLabel.text = [[_dic objectForKey:@"detail"] objectForKey:@"addtime"];

    NSLog(@"%@", [_dic objectForKey:@"detail"]);
    for (int i = 0; i < [[dic objectForKey:@"project"] count]; i ++) {
        Medicine *medicine = [[Medicine alloc] init];
        [medicine setValuesForKeysWithDictionary:[[dic objectForKey:@"project"] objectAtIndex:i]];
        [_useMedicineMArr addObject:medicine];
        
    }
    [self showMedicineNameAndCount];
}
- (IBAction)editMyPlanBtnAction:(id)sender {
    UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"糖尿病护士提醒" message:@"请填写您想要的方案名称" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"就叫他了", nil];
    alertView.alertViewStyle = UIAlertViewStylePlainTextInput;
    [alertView show];
}
-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (buttonIndex == 1) {
        _myPlanNameLabel.text = [[alertView textFieldAtIndex:0] text];
        if ([_myPlanNameLabel.text isEqualToString:@""]) {
            _myPlanNameLabel.text = @"我的方案";
        }
    }
}
- (IBAction)showView:(UIButton *)button {

    _littleWindowView = [[[NSBundle mainBundle] loadNibNamed:@"LittleWindowView" owner:self options:nil]lastObject];
        _littleWindowView.timeLabel.text = [self prepareButtonWithTag:button.tag];
    if (_addBreakfastBtn_1.hidden) {
        _littleWindowView.isEdit = YES;
    }
    NSMutableArray *array = [[NSMutableArray alloc] init];
    for (int i = 0; i < _useMedicineMArr.count; i++) {
        @autoreleasepool {
            Medicine *medicine = [_useMedicineMArr objectAtIndex:i];
            if ([[self prepareAddButtonWithTag:button.tag + 10000] isEqualToString:medicine.useMedicineTime]) {
                [array addObject:medicine];
            }
        }
    }
    [_littleWindowView valueOfArrayBlock:^(NSArray *array , NSArray *deleArr) {
        if (array.count ==0) {
            [button setTitle:@"无药物" forState:UIControlStateNormal];
            UILabel *label = (UILabel * )[self viewWithTag:button.tag + 20000];
            label.text = @"0种";
        }
        [_useMedicineMArr removeObjectsInArray:deleArr];
        [self showMedicineNameAndCount];
    }];
    _littleWindowView.medicineMArr = array;
 
    [[KGModal sharedInstance] showWithContentView:_littleWindowView andAnimated:YES];
}
-(void)setIsEdit:(BOOL)isEdit
{
    _saveBtn.hidden = YES;
    _addBreakfastBtn_1.hidden = YES;
    _addBreakfastBtn_2.hidden = YES;
    _addBreakfastBtn_3.hidden = YES;
    _addLunchBtn_1.hidden = YES;
    _addLunchBtn_2.hidden = YES;
    _addLunchBtn_3.hidden = YES;
    _addDinnerBtn_1.hidden = YES;
    _addDinnerBtn_2.hidden = YES;
    _addDinnerBtn_3.hidden = YES;
    _addNightBtn.hidden = YES;

}
#pragma  mark- 编辑按钮方法
-(void)setIsEditBtn:(UIButton *)isEditBtn
{
    NSLog(@"%@", isEditBtn.titleLabel.text);
    if ([isEditBtn.titleLabel.text isEqualToString:@"编辑"]) {
        _saveBtn.hidden = NO;
        _addBreakfastBtn_1.hidden = NO;
        _addBreakfastBtn_2.hidden = NO;
        _addBreakfastBtn_3.hidden = NO;
        _addLunchBtn_1.hidden = NO;
        _addLunchBtn_2.hidden = NO;
        _addLunchBtn_3.hidden = NO;
        _addDinnerBtn_1.hidden = NO;
        _addDinnerBtn_2.hidden = NO;
        _addDinnerBtn_3.hidden = NO;
        _addNightBtn.hidden = NO;
    } else{
        _saveBtn.hidden = YES;
        _addBreakfastBtn_1.hidden = YES;
        _addBreakfastBtn_2.hidden = YES;
        _addBreakfastBtn_3.hidden = YES;
        _addLunchBtn_1.hidden = YES;
        _addLunchBtn_2.hidden = YES;
        _addLunchBtn_3.hidden = YES;
        _addDinnerBtn_1.hidden = YES;
        _addDinnerBtn_2.hidden = YES;
        _addDinnerBtn_3.hidden = YES;
        _addNightBtn.hidden = YES;
    }
    _littleWindowView.isSaveBtn = isEditBtn;

}
#pragma  mark- 保存操作
- (IBAction)saveBtnAction:(id)sender {
    User *user = [User shareInstance];
    if (user.member_uid == nil) {
        DXAlertView *alertView = [[DXAlertView alloc] initWithTitle:nil contentText:@"您还没有登录,请先登录" leftButtonTitle:@"暂不登录" rightButtonTitle:@"去登录"];
        alertView.rightBlock = ^(){

                UIStoryboard *loginSB = [UIStoryboard storyboardWithName:@"Mine" bundle:nil];
                LoginViewController *loginVC =[loginSB instantiateViewControllerWithIdentifier:@"login"];
            
                [[self viewController] presentViewController:loginVC animated:YES completion:nil];
            };
            [alertView show];

    } else {

        [self.delegate  passValueWithMedicineArr:_useMedicineMArr andDateStr:_dateStr andPlanName:_myPlanNameLabel.text];
    }
}
#pragma  mark- button显示药名 种数
-(UIButton *)showMedicineNameAndCount
{
    for (int i = 0; i < _buttonArr.count; i++) {
        NSInteger temp = 0;
        for (int j = 0; j < _useMedicineMArr.count; j++) {
            Medicine *medicine = _useMedicineMArr[j];
            
            if ([medicine.useMedicineTime isEqualToString:_buttonArrNum[i]]) {
                UIButton *button = (UIButton *)[self viewWithTag:i + 10000];
                [button setTitle:medicine.medicine_name forState:UIControlStateNormal];
               temp ++;
            }
        }
        UILabel *label = (UILabel *)[self viewWithTag:i +30000];
        label.text = [NSString stringWithFormat:@"%ld种", (long)temp];
    }
    return nil;
}
- (IBAction)addMedicineBtnAction:(UIButton *)button
{
    AddMedicineViewController *addMedicineVC = [[AddMedicineViewController alloc] init];
    addMedicineVC.isAddDose = YES;
    addMedicineVC.useMedicineTime = [self prepareAddButtonWithTag:button.tag];
    [addMedicineVC valueOfMedicine:^(Medicine *medicine) {
        [_useMedicineMArr addObject:medicine];
        [self showMedicineNameAndCount];
//        [self showMedicineCount];
    }];
    [[[self viewController] navigationController] pushViewController:addMedicineVC animated:YES];
//    [[self viewController] presentViewController:addMedicineVC animated:YES completion:nil];
}

- (UIViewController *)viewController {
    for (UIView* next = [self superview]; next; next = next.superview) {
        UIResponder *nextResponder = [next nextResponder];
        if ([nextResponder isKindOfClass:[UIViewController class]]) {
            return (UIViewController *)nextResponder;
        }
    }
    return nil;
}
-(NSString *)prepareButtonWithTag:(NSInteger )tag
{
    for (int i = 0; i < _buttonArr.count; i ++) {
        if (tag == i + 10000) {
            return [_buttonArr objectAtIndex:i];
        }
    }
    return nil;
}

-(NSString *)prepareAddButtonWithTag:(NSInteger )tag
{
    for (int i = 0; i < _buttonArrNum.count; i ++) {
        if (tag == i + 20000) {
            return [_buttonArrNum objectAtIndex:i];
        }
    }
    return nil;
}
- (void)setSelected:(BOOL)selected animated:(BOOL)animated {
    [super setSelected:selected animated:animated];

    // Configure the view for the selected state
}

@end
