//
//  PhysicalCheckRemindViewController.m
//  TangNiaoBingHuShi
//
//  Created by Jason on 14-11-20.
//  Copyright (c) 2014年 Jason. All rights reserved.
//

#import "PhysicalCheckRemindViewController.h"
#import "FamilyMember.h"
#import "AlarmClock.h"
#import "AlarmClockRemindViewController.h"
#import "AFNetworking.h"
#import "Prompt.h"
#import "User.h"
#import "LoginViewController.h"
#import "MyDatePickerView.h"
#import "JSDatePickerView.h"
@interface PhysicalCheckRemindViewController ()<UIActionSheetDelegate, UIAlertViewDelegate, UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate>
{
    NSArray *_array;
    UIDatePicker *_datePicker;
    NSMutableArray *_familyArr;
    NSMutableArray *_alarmClockMArr;
}
@property (weak, nonatomic) IBOutlet UITextView *textView;
@property (weak, nonatomic) IBOutlet UIScrollView *scrollView;
@property (weak, nonatomic) IBOutlet UIButton *lastCheckTimeBtn;
@property (weak, nonatomic) IBOutlet UILabel *lastCheckTimeLabel;
@property (nonatomic, strong) UIActionSheet *actionSheet;//动画actionSheet
@property (weak, nonatomic) IBOutlet UITextField *checkCycleTF;
@property (weak, nonatomic) IBOutlet UILabel *checkProjectLabel;
@property (weak, nonatomic) IBOutlet UIButton *checkProjectBtn;
@property (weak, nonatomic) IBOutlet UIView *familyRemindView;
@property (nonatomic, strong) UIView *pickerBackgroundView;
@property (weak, nonatomic) IBOutlet UIButton *saveBtn;
@property (weak, nonatomic) IBOutlet UILabel *contentLabel;
@property (weak, nonatomic) IBOutlet UILabel *titleLabel;

@property (weak, nonatomic) IBOutlet UIView *promptView;
@property (weak, nonatomic) IBOutlet UIButton *spreadOutBtn;
@property (weak, nonatomic) IBOutlet UILabel *promptStyleLabel;
@property (weak, nonatomic) IBOutlet UIView *familyPromptView;
@property (nonatomic, strong) UITableView *tableView;
@property (weak, nonatomic) IBOutlet UILabel *promptLabel;
@property (nonatomic, copy) NSString *contentStr;
@property (nonatomic, strong) MyDatePickerView *myDatePickerView;
@end

@implementation PhysicalCheckRemindViewController
-(instancetype)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        
    }
    return self;
}
-(void)viewDidLayoutSubviews
{
    [super viewDidLayoutSubviews];
       _scrollView.contentSize = CGSizeMake(self.view.self.frame.size.width, 800);
  
}
- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    _array = @[@"其他检查",@"血常规", @"糖尿病血红蛋白", @"尿常规", @"血脂四项", @"尿微量白蛋白", @"肾功能", @"肝功能", @"心电图", @"眼底检查", @"足底检查"];
    _spreadOutBtn.hidden = YES;
    _familyArr = [[NSMutableArray alloc] init];
    _alarmClockMArr = [[NSMutableArray alloc] init];
    
    _checkCycleTF.delegate = self;
    [self setAutomaticallyAdjustsScrollViewInsets:NO];
    _scrollView.frame = CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
    _scrollView.contentSize = CGSizeMake(self.view.self.frame.size.width, 2000);
    
    
    _myDatePickerView = [[MyDatePickerView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT / 2)];
    
    _myDatePickerView.datePicker.datePickerMode =UIDatePickerModeDate;
//    _datePicker = [[UIDatePicker alloc] initWithFrame:CGRectMake(0, 40, self.view.frame.size.width, 400)];
//    _datePicker.datePickerMode = UIDatePickerModeDate;
//    _datePicker.backgroundColor = [UIColor whiteColor];
//
//    _datePicker.userInteractionEnabled = YES;
//    UIButton *button = [UIButton buttonWithType:UIButtonTypeSystem];
//    button.backgroundColor = [UIColor grayColor];
//    button.frame = CGRectMake(self.view.frame.size.width - 60, 0, 60, 30);
//    [button setTitle:@"确认" forState:UIControlStateNormal];
//    
//    [button addTarget:self action:@selector(confirmBtnAction:) forControlEvents:UIControlEventTouchUpInside];
//    UIButton *cancelBtn = [UIButton buttonWithType:UIButtonTypeSystem];
//    cancelBtn.frame = CGRectMake(0, 0, 60, 30);
//    [cancelBtn setTitle:@"取消" forState:UIControlStateNormal];
//    cancelBtn.backgroundColor = [UIColor grayColor];
//    [cancelBtn addTarget:self action:@selector(cancelBtnAction:) forControlEvents:UIControlEventTouchUpInside];
//
//    _pickerBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, self.view.frame.size.height - _datePicker.frame.size.height - 40, self.view.frame.size.width, 400)];
    
//    _pickerBackgroundView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 400)];
//    _pickerBackgroundView.hidden = YES;
//    _pickerBackgroundView.backgroundColor = [UIColor whiteColor];
//    [self.view addSubview:_pickerBackgroundView];
//    [_pickerBackgroundView addSubview:_datePicker];
//    [_pickerBackgroundView addSubview:button];
//    [_pickerBackgroundView addSubview:cancelBtn];
    
//    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(returnKeyBoard:)];
//    tap.numberOfTapsRequired = 1;
//    tap.numberOfTouchesRequired = 1;
//    [self.view addGestureRecognizer:tap];
    
    
//   家人选择tableView
    
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, _familyRemindView.frame.origin.y + _familyRemindView.frame.size.height, self.view.frame.size.width, 100) style:UITableViewStylePlain];
    [_scrollView addSubview:_tableView];
    _tableView.delegate = self;
    _tableView.dataSource = self;
    _tableView.userInteractionEnabled = YES;
    [_tableView registerClass:[UITableViewCell class] forCellReuseIdentifier:@"reuse"];
    _tableView.hidden = YES;
//    _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
}
#pragma  mark- 保存闹钟方法
- (IBAction)saveBtnAction:(id)sender
{
    if ([_checkProjectLabel.text isEqualToString:@""]) {
        [FVCustomAlertView showDefaultWarningAlertOnView:self.view withTitle:@"请选择检查项目"];
        [self hiddenAlertView];
    } else if ([_lastCheckTimeLabel.text isEqualToString:@""]) {
        [FVCustomAlertView showDefaultWarningAlertOnView:self.view withTitle:@"上次检查的日期未填"];
        [self hiddenAlertView];
        
    } else if ([_checkCycleTF.text isEqualToString:@""]) {
        [FVCustomAlertView showDefaultWarningAlertOnView:self.view withTitle:@"请选择检查周期"];
        [self hiddenAlertView];
        
    }
    else {
        AlarmClock *alarmClock = [[AlarmClock alloc] init];
        NSInteger days = [_checkCycleTF.text integerValue];
        NSLog(@"----- %ld", (long)days);
        //    _datePicker.timeZone = [NSTimeZone systemTimeZone];
        NSDate *date = _myDatePickerView.datePicker.date;
        NSInteger time = days * 24 * 60 * 60;
        NSDate *laterDate = [date dateByAddingTimeInterval:time];
        NSLog(@"计算后：%@", laterDate);
        
        NSString *laterDateStr = [NSString stringWithFormat:@"%@", laterDate];
        laterDateStr = [laterDateStr substringToIndex:10];
        alarmClock.time = laterDateStr;
        NSLog(@"转换字符串后：%@", laterDateStr);
        alarmClock.alarmType = @"1";
        alarmClock.checkProject = _checkProjectLabel.text;
        alarmClock.remarks = [NSString stringWithFormat:@"您该到医院检查“%@”了", _checkProjectLabel.text];
        NSLog(@"%@", alarmClock.remarks);
        [_alarmClockMArr addObject:alarmClock];
        [self isSameLocalNotification];
        [self physicalRemindAction:alarmClock date:laterDate];
        
        [self writeToLocal];
        
        
       
        [self.navigationController popToViewController:[self.navigationController.viewControllers objectAtIndex:([self.navigationController.viewControllers count] - 3)] animated:YES];
        [FVCustomAlertView showDefaultDoneAlertOnView:self.view withTitle:@"添加成功"];
        [self hiddenAlertView];
    }
}
-(BOOL)isSameLocalNotification
{
    UIApplication *app = [UIApplication sharedApplication];
    //获取本地通知中心数组
    NSArray *localArr = [app scheduledLocalNotifications];
    UILocalNotification *oldLocalNotification;
    if (localArr) {
        for (UILocalNotification *noti in localArr) {
            NSDictionary *dic = noti.userInfo;
            if (dic) {
                NSString *str = [dic objectForKey:@"alarmClock"];
                NSLog(@"已存储的闹钟:%@", str);
                
            }
        }
    }
    return NO;
}
#pragma  mark- 警告框消失方法
-(void)hiddenAlertView
{
    [NSTimer scheduledTimerWithTimeInterval:2 target:self selector:@selector(hiddenAlertViewNow) userInfo:nil repeats:1];
}
-(void)hiddenAlertViewNow
{
    [FVCustomAlertView hideAlertFromView:self.view fading:YES];
}
#pragma  mark- 检查提醒闹钟实现
- (void)physicalRemindAction:(AlarmClock *) alarmClock date:(NSDate *)date
{

    UILocalNotification *localNotification = [[UILocalNotification alloc] init];
    if (localNotification) {
        NSDate *nowDate = [NSDate date];
        
        localNotification.fireDate = [nowDate dateByAddingTimeInterval:[date timeIntervalSinceNow]];
        localNotification.alertBody = alarmClock.remarks;
        localNotification.soundName = UILocalNotificationDefaultSoundName;
        localNotification.timeZone = [NSTimeZone defaultTimeZone];
        localNotification.alertAction = @"查看闹钟";
        localNotification.repeatInterval = 0;
        NSDictionary *userInfo = [NSDictionary dictionaryWithObject:[NSString stringWithFormat:@"%@%@",alarmClock.checkProject, alarmClock.time] forKey:@"alarmClock1"];
        localNotification.userInfo = userInfo;
        localNotification.applicationIconBadgeNumber = 1;
        [[UIApplication sharedApplication] scheduleLocalNotification:localNotification];
    }
}

#pragma  mark- 闹钟本地逻辑
-(void)readAlarmFromLocal
{
    NSString *docPath = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject];
    NSString *familyArrPath = [docPath stringByAppendingPathComponent:@"alarmClock.aa"];
    NSArray *array = [NSKeyedUnarchiver unarchiveObjectWithFile:familyArrPath];
    if (array) {
        
        _alarmClockMArr = [NSKeyedUnarchiver unarchiveObjectWithFile:familyArrPath];
    }
}
//闹钟写入本地
- (void)writeToLocal
{
    NSString *docPath = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject];
    NSString *familyArrPath = [docPath stringByAppendingPathComponent:@"alarmClock.aa"];
    NSLog(@"%@", familyArrPath);
    [NSKeyedArchiver archiveRootObject:_alarmClockMArr toFile:familyArrPath];
    NSArray *array = [NSKeyedUnarchiver unarchiveObjectWithFile:familyArrPath];
    NSLog(@"%@", array);


}
#pragma  mark- UITableView delegate
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *str = @"reuse";
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:str];
    FamilyMember *familyM = [_familyArr objectAtIndex:indexPath.row];
    cell.textLabel.text = familyM.realName;
    return cell;
}
-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    
}

-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return _familyArr.count;
}
#pragma  mark- 时间轴取消方法
-(void)cancelBtnAction:(UIButton *)button
{

        [_actionSheet dismissWithClickedButtonIndex:1 animated:YES];
}
#pragma  mark- 时间确认方法
-(void)confirmBtnAction:(UIButton *)button
{

    
    NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
    NSDate *nowDate = [NSDate date];
    _datePicker.maximumDate = nowDate;
    [formatter setDateFormat:@"YYYY-MM-dd"];
    NSString *date = [formatter stringFromDate:_datePicker.date];
    
    
    [_lastCheckTimeLabel setText:[NSString stringWithFormat:@"%@" ,date]];
    [_actionSheet dismissWithClickedButtonIndex:1 animated:YES];
}

#pragma  mark- 收回键盘
-(void)returnKeyBoard:(UITapGestureRecognizer *)tap
{
    [_checkCycleTF resignFirstResponder];

}
-(BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [_checkCycleTF resignFirstResponder];
    return YES;
}
#pragma  mark- 刷新家人方法
-(void)viewDidAppear:(BOOL)animated
{
    [self readFromLocal];
    [self readAlarmFromLocal];
    if (_familyArr.count > 0) {
        _tableView.hidden = NO;
        _saveBtn.frame = CGRectMake(0, _tableView.frame.size.height + _tableView.frame.origin.y, self.view.frame.size.width, _saveBtn.frame.size.height);
        
    }
}
//读取家人
-(void)readFromLocal
{

    NSString *docPath = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject];
    NSString *familyArrPath = [docPath stringByAppendingPathComponent:@"family.aa"];
    NSArray *array = [NSKeyedUnarchiver unarchiveObjectWithFile:familyArrPath];
    if (array) {
        _familyArr = [NSKeyedUnarchiver unarchiveObjectWithFile:familyArrPath];
        [_tableView reloadData];
    }
}
#pragma  mark- 检查项目方法
- (IBAction)checkProjectBtnAction:(id)sender {
    User *user = [User shareInstance];
    if (user.member_uid == nil) {
        DXAlertView *alertView = [[DXAlertView alloc] initWithTitle:nil contentText:@"您还没有登录，如果登录会有惊喜哦！" leftButtonTitle:@"暂不登录" rightButtonTitle:@"去登录"];
        alertView.leftBlock = ^(){
            [_checkCycleTF resignFirstResponder];
            JSPickerView *picker = [JSPickerView pickerViewInstance];
            picker.firstMArr =(NSMutableArray *) _array;
            [picker valueOfCurrentStr:^(NSString *currentStr) {
                if ([currentStr isEqualToString:@"其他检查"]) {
                    UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"糖尿病护士提醒" message:@"请输入您需要检查的项目" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确认", nil];
                    alertView.tag = 11111;
                    alertView.alertViewStyle = UIAlertViewStylePlainTextInput;
                    [alertView show];
                } else{
                    _checkProjectLabel.text = currentStr;
                    [self getContentWithProjectStr:_checkProjectLabel.text];
                    
                }
            }];
            [picker showInView:self.view];

            
            
        };
        alertView.rightBlock = ^(){
            UIStoryboard *loginSB = [UIStoryboard storyboardWithName:@"Mine" bundle:nil];
           LoginViewController *loginVC =[loginSB instantiateViewControllerWithIdentifier:@"login"];
            [loginVC valueOfBlock:^{
                
            }];
            [self presentViewController:loginVC animated:YES completion:nil];
        };
        [alertView show];
    }else {
        [_checkCycleTF resignFirstResponder];
        JSPickerView *picker = [JSPickerView pickerViewInstance];
        picker.firstMArr =(NSMutableArray *) _array;
        [picker valueOfCurrentStr:^(NSString *currentStr) {
            if ([currentStr isEqualToString:@"其他检查"]) {
                UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"糖尿病护士提醒" message:@"请输入您需要检查的项目" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确认", nil];
                alertView.tag = 11111;
                alertView.alertViewStyle = UIAlertViewStylePlainTextInput;
                [alertView show];
            } else{
                _checkProjectLabel.text = currentStr;
                [self getContentWithProjectStr:_checkProjectLabel.text];
                
            }
        }];
        [picker showInView:self.view];
        
    }
    
  
}
#pragma  mark- ActionSheetDelegate
-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    NSLog(@"%ld", (long)buttonIndex);
    if (buttonIndex == 0) {
        UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"糖尿病护士提醒" message:@"请输入您需要检查的项目" delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确认", nil];
        alertView.tag = 11111;
        alertView.alertViewStyle = UIAlertViewStylePlainTextInput;
        [alertView show];
        return;
    } else if (buttonIndex == 11) {
        return;
        
    }
    
//    [_checkProjectLabel setText:[_array objectAtIndex:buttonIndex]];
//    [self getContentWithProjectStr:_checkProjectLabel.text];
    
}

#pragma  mark- 获取温馨提示内容请求
-(void)getContentWithProjectStr:(NSString *)projectStr
{
    [FVCustomAlertView showDefaultLoadingAlertOnView:self.view withTitle:@"努力加载中。。。"];
    NSString *urlStr = [NSString stringWithFormat:@"http://test.tanghushi.com/api/mobile/?version=2&module=clock&op=getremind&name=%@", projectStr];
    urlStr = [urlStr stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
    NSURL *url = [NSURL URLWithString:urlStr];
    NSURLRequest *request = [NSURLRequest requestWithURL:url cachePolicy:NSURLRequestReloadIgnoringLocalCacheData timeoutInterval:20];
    AFHTTPRequestOperation *operation = [[AFHTTPRequestOperation alloc] initWithRequest:request];
    [operation setCompletionBlockWithSuccess:^(AFHTTPRequestOperation *operation, id responseObject) {
        NSLog(@"operation = %@", operation.responseData);
        NSLog(@"responseObject = %@", responseObject);
        id object = [NSJSONSerialization JSONObjectWithData:responseObject options:NSJSONReadingMutableLeaves error:nil];
        NSLog(@"%@", object);
        Prompt *prompt = [[Prompt alloc] init];
        [prompt setValuesForKeysWithDictionary:[[object objectForKey:@"Variables"] objectForKey:@"value"]];
        NSLog(@"%d", prompt.period);
        [self hiddenAlertViewNow];
//        _spreadOutBtn.hidden = NO;
        if (prompt.period) {
            _checkCycleTF.text = [NSString stringWithFormat:@"%d", prompt.period];
            _titleLabel.text =prompt.remind_title;
            _contentLabel.numberOfLines = 3;
            _contentStr = prompt.remind;
            NSLog(@" =-====%@", _contentStr);
            _textView.text = prompt.remind;
            
        }
    } failure:^(AFHTTPRequestOperation *operation, NSError *error) {
        if (error) {
            NSLog(@"error ==%@",error);
            [FVCustomAlertView showDefaultErrorAlertOnView:self.view withTitle:@"网络链接错误"];
            [self hiddenAlertView];
        }
    }];
    [operation start];
}
#pragma  mark- 定制alertView方法
-(void)willPresentAlertView:(UIAlertView *)alertView
{
//    [[[alertView subviews] objectAtIndex:0] setBackgroundColor:[UIColor colorWithRed:81.0/255.0 green:193/255.0 blue:233/255.0 alpha:1]];
    [alertView setBackgroundColor:[UIColor colorWithRed:81.0/255.0 green:193/255.0 blue:233/255.0 alpha:1]];
}
#pragma  mark- 展开温馨提示方法
int num = 0;
- (IBAction)spreadOutBtnAction:(id)sender {
    if (num % 2 == 0) {
        _contentLabel.numberOfLines = 0;
    } else {
        _contentLabel.numberOfLines = 3;
    }
//    _promptView.autoresizesSubviews = NO;
    num ++;
    CGRect labelRect = _contentLabel.frame;
    CGSize size = [_contentLabel.text sizeWithFont:[UIFont systemFontOfSize:10] constrainedToSize:CGSizeMake(_contentLabel.frame.size.width, 2000) lineBreakMode:UILineBreakModeCharacterWrap];
    _contentLabel.autoresizingMask = UIViewAutoresizingFlexibleHeight;
    labelRect.size.height = size.height + 10;
    _contentLabel.frame = labelRect;
    [_contentLabel sizeToFit];
//    _contentLabel.lineBreakMode = NSLineBreakByCharWrapping;
    
    NSLog(@"%d", num);
    
//    _promptView.frame= CGRectMake(_promptView.frame.origin.x, _promptView.frame.origin.y, _promptView.frame.size.width, _promptLabel.frame.size.height + _titleLabel.frame.size.height + _contentLabel.frame.size.height + _spreadOutBtn.frame.size.height);

//
//    _contentLabel.frame = CGRectMake(_contentLabel.frame.origin.x, _contentLabel.frame.origin.y, _contentLabel.frame.size.width, 500);
    
//    _contentLabel.textAlignment = NSTextAlignmentLeft;
//    _contentLabel.text = _contentStr;
//    [_contentLabel sizeToFit];
//
//    [_promptView sizeToFit];
    _spreadOutBtn.frame = CGRectMake(_spreadOutBtn.frame.origin.x, _contentLabel.frame.size.height + _contentLabel.frame.origin.y, _spreadOutBtn.frame.size.width, _spreadOutBtn.frame.size.height);
//    CGRect promptRect = _promptView.frame;
//    promptRect.size.height = _promptLabel.frame.size.height + _titleLabel.frame.size.height + _contentLabel.frame.size.height + _spreadOutBtn.frame.size.height + 10;
//    _promptView.frame = promptRect;
    
//    _promptView.frame= CGRectMake(_promptView.frame.origin.x, _promptView.frame.origin.y, _promptView.frame.size.width,_promptLabel.frame.size.height + _titleLabel.frame.size.height + _contentLabel.frame.size.height + _spreadOutBtn.frame.size.height + 30);
//
//    
    _promptStyleLabel.frame = CGRectMake(_promptStyleLabel.frame.origin.x, _spreadOutBtn.frame.size.height + _spreadOutBtn.frame.origin.y, _promptStyleLabel.frame.size.width, _promptStyleLabel.frame.size.height);
    _familyPromptView.frame = CGRectMake(_familyPromptView.frame.origin.x, _promptStyleLabel.frame.origin.y +                                    _promptStyleLabel.frame.size.height, _familyPromptView.frame.size.width, _familyPromptView.frame.size.height);
//    
}

-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (alertView.tag == 11111) {
        if (buttonIndex == 1) {
            NSLog(@"确认");
            NSLog(@"%@", [[alertView textFieldAtIndex:0] text]);
            [_checkProjectLabel setText:[[alertView textFieldAtIndex:0] text]];
        }
        
    }
}
#pragma  mark- 上次检查日期按钮方法
- (IBAction)lastCheckTimeBtnAction:(id)sender {
   
    if (IOS_VERSION >= 8.0) {
        JSDatePickerView *datePicker = [JSDatePickerView datePickerViewInstance];
        datePicker.datePicker.maximumDate =  [NSDate date];
        [datePicker showInView:self.view];
        [datePicker valueOfCurrentStr:^(NSString *currentStr) {
            _lastCheckTimeLabel.text = currentStr;
        }];
    
        
    } else {
        
        _actionSheet = [[UIActionSheet alloc] initWithTitle:@"\n\n\n\n" delegate:self cancelButtonTitle:@"取消" destructiveButtonTitle:@"确定" otherButtonTitles:nil, nil];
        _actionSheet.userInteractionEnabled = YES;
        [_actionSheet addSubview:_myDatePickerView];
        [_myDatePickerView valueOfBlock:^(NSString *dateStr) {
            
        }];
        [_myDatePickerView valueOfDatePicker:^(UIDatePicker *datePicker) {
            NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
            NSDate *nowDate = [NSDate date];
            datePicker.maximumDate = nowDate;
            [formatter setDateFormat:@"YYYY-MM-dd"];
            NSString *date = [formatter stringFromDate:datePicker.date];
            
            
            [_lastCheckTimeLabel setText:[NSString stringWithFormat:@"%@" ,date]];
            [_actionSheet dismissWithClickedButtonIndex:1 animated:YES];
        }];
        [_myDatePickerView valueOfHiddenBlock:^{
            [_actionSheet dismissWithClickedButtonIndex:1 animated:YES];
        }];
        
        [_actionSheet showInView:self.view];
        
        
        _pickerBackgroundView.hidden = NO;
        [_checkCycleTF resignFirstResponder];
    }
    
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
